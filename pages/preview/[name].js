import Head from 'next/head'
import { useRouter } from 'next/router'

import React, { useEffect, useState } from 'react'
// Import the Slate editor factory.

import Navbar from "../../components/Navbar"

import StarterKit from '@tiptap/starter-kit'
import Document from '@tiptap/extension-document'
import Dropcursor from '@tiptap/extension-dropcursor'
import Image from '@tiptap/extension-image'
import Paragraph from '@tiptap/extension-paragraph'
import Bold from '@tiptap/extension-bold'
import Text from '@tiptap/extension-text'
import { EditorContent, useEditor } from '@tiptap/react'
import{ useCallback } from 'react'
import axios from "axios"
import { generateHTML } from '@tiptap/html'

// Import the Slate components and React plugin.







export default function Home(props) {
  const editor = useEditor({
    extensions: [
      Document, Paragraph, Text, Image, Dropcursor,StarterKit
    ],
    content: props.onepost,
    onUpdate: ({ editor }) => {
      const json = editor.getJSON()
      sethtml(json)
      console.log(html)

     
      // send the content to an API here
    }
  })


  const router = useRouter()
  const  blogname  = router.query




  


  
  



 
  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="editorframe">
      <Navbar></Navbar>
      
      <div>Project Name</div>
      <div className='Previewarticle'>
      <h1 className="previewheader">{props.heading}</h1>
      <div dangerouslySetInnerHTML={{ __html: props.onepost }}></div>
    </div>

      
     

      
      
      
 
      
      
      

      </main>
     

    </div>
  )
}

export async function getStaticProps({ params }) {
  let slug = params.name
  const res = await axios.get(`${process.env.APIPATH}/api/getonepostslug?postid=${slug}`, { 
    headers: { "Accept-Encoding": "gzip,deflate,compress" } 
});
  var html= res.data.onepost.body
  var heading = res.data.onepost.h1
  
  
  return {
    props: {
      onepost:html,
      
      postid:slug,
      heading:heading
      
      
    }
  }
}

export async function getStaticPaths(props) {
  const res = await axios.get(`${process.env.APIPATH}/api/getallposts`, { 
    headers: { "Accept-Encoding": "gzip,deflate,compress" } 
});


  const paths = res.data.allpost.map((article) => ({
      params: { name: article.slug },
    }))
  return {
    paths,
    fallback: false
  }
}



